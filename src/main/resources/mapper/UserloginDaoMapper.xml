<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.loginserver.dao.UserloginDaoMapper">
  <resultMap id="BaseResultMap" type="com.example.loginserver.model.Userlogin">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List">
    id, login_name, password, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userlogin
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectUserloginList"   resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from userlogin

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userlogin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.loginserver.model.Userlogin" useGeneratedKeys="true">
    insert into userlogin (login_name, password,create_time, update_time)
    values (#{loginName,jdbcType=CHAR}, #{password,jdbcType=CHAR},#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.loginserver.model.Userlogin" useGeneratedKeys="true">
    insert into userlogin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        #{loginName,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.loginserver.model.Userlogin">
    update userlogin
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=CHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.loginserver.model.Userlogin">
    update userlogin
    set login_name = #{loginName,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>